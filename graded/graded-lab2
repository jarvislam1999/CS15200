Lab 2 Evaluation
CMSC 15200 Winter 2019

=== correctness:

grad2
- creates image of correct width and height  2 / 2
- start color and end color correct          5 / 5
- intermediate colors correct                5 / 5
- run in main                                2 / 2

grad3
- creates image of correct width and height  2 / 2
- start, middle and end colors correct       5 / 5
- intermediate colors correct                5 / 5
- run in main                                2 / 2

circ
- creates image of correct width and height  2 / 2
- circle perimeter drawn correctly           4 / 4
- run in main                                2 / 2

correct submission (all files present and correctly named and situated)
                                             4 / 4
			  

>>> correctness subtotal:  40 / 40


=== style:

code layout is clean and idiomatic 8 / 8

identifiers are well named 6 / 6

code is written clearly, avoiding unnecessary complexity 6 / 6

programs are well decomposed into helpers where appropriate: N/A this week

code avoids blatant inefficiencies: N/A this week


>>> style subtotal:  20 / 20


=== The new, as of this quarter, scoring formula is given here.

The following scoring formula has the effect of scaling style by
correctness. This is so a student cannot, for example, write only one
function out of six and earn full style points.

Let c = correctness points.
Let p = correctness percentage.
Let s = style points.
The total score is (c + p*s), rounded to the nearest integer.

For example, if a student earns 30/40 correctness points and 12/20
style points, the total score is 30 + 0.75 * 12 = 30 + 9 = 39 (of 60).

// _total-score_  60 / 60

// graded by Zayne Khouja

    ** Great Job! Very well designed and written code.  Your use of 
       helper functions is spot on and very efficient.  Also, clever
       re-use of grad2 for your grad3 code ;)
